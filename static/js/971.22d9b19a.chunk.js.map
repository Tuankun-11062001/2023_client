{"version":3,"file":"static/js/971.22d9b19a.chunk.js","mappings":"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","sources":["components/Prize.jsx","screens/Game.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst overlay = {\r\n  hide: {\r\n    opacity: 0,\r\n    backgroundColor: \"unset\",\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    transtion: {\r\n      delay: 0.5,\r\n      duration: 1,\r\n      when: \"beforeChildren\",\r\n    },\r\n  },\r\n};\r\n\r\nconst box = {\r\n  hide: {\r\n    y: \"-100vh\",\r\n  },\r\n\r\n  visible: {\r\n    y: 0,\r\n    transtion: {\r\n      delay: 1,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Prize({ back, prize }) {\r\n  const navigate = useNavigate();\r\n\r\n  const goback = () => {\r\n    back(false);\r\n  };\r\n\r\n  const goToInfomation = () => {\r\n    navigate(\"/infomation\", { state: { prize } });\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        className=\"prize\"\r\n        variants={overlay}\r\n        initial=\"hide\"\r\n        animate=\"visible\"\r\n        exit=\"hide\"\r\n      >\r\n        <motion.div className=\"prize_content\" variants={box}>\r\n          <div className=\"prize_content_image\">\r\n            <lord-icon\r\n              src=\"https://cdn.lordicon.com/lupuorrc.json\"\r\n              trigger=\"loop\"\r\n              delay=\"2000\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            ></lord-icon>\r\n          </div>\r\n          <h2>Congratulations</h2>\r\n          <p>\r\n            Bạn nhận được một phần quà <span>{prize}</span>. Để nhận được thưởng\r\n            bạn điền thông tin nhé.\r\n          </p>\r\n          <div className=\"prize_content_buttons\">\r\n            {/* <button onClick={goback}>Quay Lại</button> */}\r\n            <button onClick={goToInfomation}>Thêm thông tin</button>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport bgImage from \"../assets/image/bg.png\";\r\n// import WheelComponent from \"react-wheel-of-prizes\";\r\n\r\n// import \"react-wheel-of-prizes/dist/index.css\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\n// import audio\r\nimport audioOf3 from \"../assets/audio/a3.mp3\";\r\nimport audioxoso from \"../assets/audio/xoso.mp3\";\r\nimport audiocainit from \"../assets/audio/cainit.mp3\";\r\nimport audiocartoon from \"../assets/audio/cartoon.mp3\";\r\nimport audiovit from \"../assets/audio/vit.mp3\";\r\nimport Prize from \"../components/Prize\";\r\n\r\nconst buttonMotion = {\r\n  hover: {\r\n    scale: 1.1,\r\n    textShadow: \"0px 0px 8px rgba(255,255,255)\",\r\n    boxShadow: \"0px 0px 8px rgba(255,255,255)\",\r\n    transition: {\r\n      yoyo: Infinity,\r\n      duration: 0.3,\r\n    },\r\n  },\r\n};\r\n\r\nconst containerMotion = {\r\n  hide: {\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Game() {\r\n  // hex color for lucky wheel game\r\n\r\n  // [#62c050,#699ee5,#fb8e42,#e83d45]\r\n\r\n  // using ref react\r\n  const ref = useRef();\r\n\r\n  // data game lucky wheel\r\n\r\n  const data = [\r\n    {\r\n      option: \"VND 5K\",\r\n      style: {\r\n        backgroundColor: \"#62c050\",\r\n        textColor: \"white\",\r\n        fontFamily: \"'Work Sans', sans-serif;\",\r\n      },\r\n    },\r\n    {\r\n      option: \"VND 10K\",\r\n      style: { backgroundColor: \"#699ee5\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"May mắn lần sau\",\r\n      style: { backgroundColor: \"#fb8e42\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"VND 20K\",\r\n      style: { backgroundColor: \"#e83d45\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"VND 30K\",\r\n      style: { backgroundColor: \"#62c050\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"May mắn lần sau\",\r\n      style: { backgroundColor: \"#699ee5\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"VND 50K\",\r\n      style: { backgroundColor: \"#fb8e42\", textColor: \"white\" },\r\n    },\r\n    {\r\n      option: \"Còn cái nịt\",\r\n      style: { backgroundColor: \"#e83d45\", textColor: \"white\" },\r\n    },\r\n  ];\r\n\r\n  // state component\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n  const [audio, setAudio] = useState();\r\n  const [showPrize, setShowPrize] = useState(\"\");\r\n  const [modalPrize, setModalPrize] = useState(false);\r\n\r\n  // logic\r\n  /**\r\n     \r\n    when click spin button\r\n      1. random audio \r\n      2. update audio \r\n      3. when scroll wheel end => audio is stopped and display modal prize \r\n     */\r\n\r\n  // func random audio\r\n  const randomAudio = () => {\r\n    const arrAudio = [audioOf3, audiocainit, audiocartoon, audioxoso, audiovit];\r\n\r\n    const random = Math.floor(Math.random() * arrAudio.length);\r\n\r\n    return arrAudio[random];\r\n  };\r\n\r\n  // function update audio\r\n\r\n  const updateAudio = (source) => {\r\n    setAudio(source);\r\n    if (ref.current) {\r\n      ref.current.pause();\r\n      ref.current.load();\r\n    }\r\n  };\r\n\r\n  // handle click spin button\r\n\r\n  const handleSpinClick = () => {\r\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\r\n    setPrizeNumber(newPrizeNumber);\r\n    setMustSpin(true);\r\n    updateAudio(randomAudio());\r\n    ref.current.play();\r\n    ref.current.volume = 0.5;\r\n  };\r\n\r\n  // handle spin stop\r\n\r\n  const handleSpinStop = () => {\r\n    setMustSpin(false);\r\n    ref.current.pause();\r\n    setModalPrize(true);\r\n    setShowPrize(data[prizeNumber].option);\r\n  };\r\n\r\n  // func back when modal prize show\r\n  const back = (value) => {\r\n    setModalPrize(value);\r\n  };\r\n\r\n  return (\r\n    // container game page\r\n    <motion.div\r\n      className=\"game\"\r\n      variants={containerMotion}\r\n      initial=\"hide\"\r\n      animate=\"visible\"\r\n    >\r\n      <img src={bgImage} className=\"game_img\" />\r\n      {/* game audio */}\r\n\r\n      <audio className=\"game_audio\" ref={ref}>\r\n        <source src={audio} type=\"audio/mp3\" />\r\n      </audio>\r\n\r\n      {/* game content */}\r\n\r\n      <div className=\"game_content\">\r\n        {/* lucky wheel */}\r\n\r\n        <Wheel\r\n          mustStartSpinning={mustSpin}\r\n          prizeNumber={prizeNumber}\r\n          data={data}\r\n          onStopSpinning={handleSpinStop}\r\n          outerBorderColor=\"#4E5452\"\r\n          outerBorderWidth={3}\r\n          innerBorderColor=\"#4E5452\"\r\n          innerBorderWidth={3}\r\n          radiusLineColor=\"#4E5452\"\r\n        />\r\n\r\n        {/* lucky wheel spin */}\r\n\r\n        <motion.button\r\n          variants={buttonMotion}\r\n          whileHover=\"hover\"\r\n          className=\"game_content_spin\"\r\n          onClick={handleSpinClick}\r\n        >\r\n          SPIN\r\n        </motion.button>\r\n      </div>\r\n\r\n      {/* when spin stop => show prize component */}\r\n\r\n      {modalPrize && <Prize back={back} prize={showPrize} />}\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":["overlay","hide","opacity","backgroundColor","visible","transtion","delay","duration","when","box","y","Prize","back","prize","navigate","useNavigate","AnimatePresence","motion","className","variants","initial","animate","exit","src","trigger","style","width","height","onClick","state","buttonMotion","hover","scale","textShadow","boxShadow","transition","yoyo","Infinity","containerMotion","Game","ref","useRef","data","option","textColor","fontFamily","useState","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","audio","setAudio","showPrize","setShowPrize","modalPrize","setModalPrize","bgImage","type","Wheel","mustStartSpinning","onStopSpinning","current","pause","outerBorderColor","outerBorderWidth","innerBorderColor","innerBorderWidth","radiusLineColor","whileHover","source","newPrizeNumber","Math","floor","random","length","arrAudio","audioOf3","audiocainit","audiocartoon","audioxoso","audiovit","randomAudio","load","play","volume","value"],"sourceRoot":""}